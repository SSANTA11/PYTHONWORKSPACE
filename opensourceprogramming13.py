# 함수 정의 def

# def 함수이름

            # def elavorate(a, b="ss"):
            #     return a*1

            # elavorate()


# 함수정의와 인수의 종류
            # 위치 인수**********************************************************************
            # 키워드 인수(옵션이 키워드 인수)************************************************
            # 차이점 분명하게 인식하기*******************************************************

print
(dict(a=1,b=2))

# 함수 호출에서의 인수 언패킹************************************************************

def grade(mid,final,report):
    total=(mid+final)*60/100+report*40/100
    return 'pass' if total>70 else 'fail'
# 마지막 줄은 컴프리헨션 심화에서 제시됨

score={'mid':100,"final":90,'report':80}
my_grade=grade(**score)
print(my_grade)

# 가변 인수 (args)->argument의 약자->다르게 써도 작동ok

# 여러숫자와 합과 평균을 구하는 함수
def my_sum2(*args):
    summ=sum(args)
    return summ, sum/len(args)
# 가변인수************************************************************************************시험출제100%
# 주의할 점 가변인수는 정의 괄호 내에서 먼저 쓰면 안된다

# 키워드 인수의 가변인수(kwargs)
# 형식: def 함수명(**kwargs)

def my_dicv(a,b,**kwargs):
    for k,v in kwargs.items():
        if k=="round":
            if v:
                return int((a+1)/b)
            else:
                return int(a/b)
        return a/b
my_dicv(5,3)

# 위치인수와 키워드인수 사이에는 순서가 있다
    # ->위치인수 다음에 키워드 인수 입력

# func(c=1,2,3)이 안되는 이유을 알아보자*****************************************************




# 가변: 써도 되고 안써도 되고
# 고정: 반드시 써야되고

# 인수의 종류와 순서: 
    
    # 순서
        # 고정 -> 가변
        # 위치 -> 키워드

    # 복합 인수 함수 순서
        # 고정 위치인수, 가변 위치인수, 가변 키워드인수
        # 고정 위치인수, 고정 키워드인수, 가변 키워드인수
            # 가변 위치인수와 고정 키워드 인수는 혼용하지 못한다.

# Quiz. 출력함수 print()를 약간 변형해서 원하는 형태의 출력함수를 만들어 봅시다. 다음과 같이 과일 이름이 스펠링 목록이 이차원리스트로 표현되어 있을 때,
# 이 목록을 다음과 같이 출력하는 my_print() 함수를 작성하시오

# def my_print(ix, *args,**kwargs):
#     print('%s:' %ix, end=' ')
#     print(*args, **kwargs)

# lambda 함수(익명함수)->실질적으로는 함수보다는 식의 기능을 한다.
# 형식: lambda 변수(매개변수 아님 주의): 식
# call 함수가 아님
# 람다는 식 한 개짜리 함수이다

# 람다는 if else를 한세트로 할 때 조건문을 사용할 수 있다
    # 반드시 if와 else가 모두 나와야 한다.

# abs=lambda x: '짝수' if x%2==0 else '홀수'
# a=int(input())
# print(abs(a))

# 변수의 범위
    # 범위에 따른 변수의 종류
        # 전역(global)변수
        # 지역(local)변수
            # 함수 내 지역변수는 함수 밖에서 사용불가하다
    # 순서
        # 지역변수 적용 후 전역변수 적용 

# global 키워드 사용
    # 함수 안에서 전역 변수를 사용할 때 global 키워드 적용
    # 형식: global 전역 변수
    # 결과: 지역 변수를 전역 변수로도 기능하도록 만듬

# 중첩 함수에서의 지역 변수
def f1():
    def f2():
        var2=20
        print(var2)
    var2=10
    f2()
    print(var2)

f1()


# nonlocal 키워드 사용
def f1():
    def f2():
        nonlocal var2
        var2=20
        print(var2)
    var2=10
    f2()
    print(var2)

f1()

# 표준 라이브러리
